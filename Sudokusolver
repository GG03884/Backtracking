#include<bits/stdc++.h>
using namespace std;
int board[9][9];
bool ispossiblerow(int board[][9],int row,int num)
{
     for(int i=0;i<9;i++)
    {
        if(board[row][i]==num)
        {
            return false;
        }
    }
    return true;

}
bool ispossiblecolumn(int board[][9],int col,int num)
{
     for(int i=0;i<9;i++)
    {
        if(board[i][col]==num)
        {
            return false;
        }
    }  
      return true;

}
bool ispossiblegrid(int board[][9],int row,int col,int num)
{
    int rowfactor=row-(row%3);
    int colfactor=col-(col%3);
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            if(board[i+rowfactor][j+colfactor]==num)
            {
                return false;
            }
        }
    }
    return true;

}
bool isPossible(int board[][9],int num,int col,int row)
{
      
  return ispossiblecolumn(board,col,num)&&ispossiblerow(board,row,num)&&ispossiblegrid(board,row,col,num);

}
bool findspaceempty(int board[][9],int &row,int&col)
{
    for(int i=0;i<9;i++)
    {
        for(int j=0;j<9;j++)
        {
            if(board[i][j]==0)
            {
                row=i;
                col=j;
                return true;
            }
        }
    }
    return false;

}
bool sudoku(int board[][9])
{
    int row=0,col=0;
    if(!findspaceempty(board,row,col))
    {
        return true;
    }
    for(int i=1;i<=9;i++)
    {
        if(isPossible(board,i,col,row))
        {
            board[row][col]=i;
            bool value=sudoku(board);
            if(value)
            {
                return true;
            }
            else{
                board[row][col]=0;
            }
        }
    }
    return false;


}
int main(){
    
    // write your code here
    for(int i=0;i<9;i++)
    {
        for(int j=0;j<9;j++)
        {
            cin>>board[i][j];
        }
    }
    bool possible=sudoku(board);
    if(possible)
    {
        cout<<"true";
    }
    else{
        cout<<"false";
    }

    return 0;
}
